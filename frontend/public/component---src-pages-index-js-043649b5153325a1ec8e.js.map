{"version":3,"sources":["webpack:///./src/components/image.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Image","react_default","a","createElement","gatsby_browser_entry","query","render","data","gatsby_image_default","fluid","placeholderImage","childImageSharp","_2896894772","__webpack_require__","d","__webpack_exports__","Title","styled","h1","withConfig","displayName","componentId","IndexPage","props","talks","console","log","layout","seo","title","keywords","style","maxWidth","marginBottom","components_image","to","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_4017075492_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","background","margin","padding","color","textDecoration","Layout","Fragment","header","paddingTop","Date","getFullYear","href","_2924840780","node"],"mappings":"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","file":"component---src-pages-index-js-043649b5153325a1ec8e.js","sourcesContent":["import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst Image = () => (\n    <StaticQuery\n        query={graphql`\n            query {\n                placeholderImage: file(\n                    relativePath: { eq: \"gatsby-astronaut.png\" }\n                ) {\n                    childImageSharp {\n                        fluid(maxWidth: 300) {\n                            ...GatsbyImageSharpFluid\n                        }\n                    }\n                }\n            }\n        `}\n        render={data => (\n            <Img fluid={data.placeholderImage.childImageSharp.fluid} />\n        )}\n    />\n);\nexport default Image;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\n\nimport Layout from '../components/layout';\nimport Image from '../components/image';\nimport SEO from '../components/seo';\n\nconst Title = styled.h1`\n    background-color: red;\n    color: white;\n    padding: 10px;\n`;\n\nconst IndexPage = props => {\n    const talks = props.data;\n\n    console.log(talks);\n\n    return (\n        <Layout>\n            <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n            <Title>Hi people</Title>\n            <p>Welcome to your new Gatsby site.</p>\n            <p>Now go build something great.</p>\n            <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n                <Image />\n            </div>\n            <Link to=\"/page-2/\">Go to page 2</Link>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    {\n        rwconf {\n            talks {\n                id\n            }\n        }\n    }\n`;\n\nexport default IndexPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n    return (\n        <StaticQuery\n            query={detailsQuery}\n            render={data => {\n                const metaDescription =\n                    description || data.site.siteMetadata.description;\n                return (\n                    <Helmet\n                        htmlAttributes={{\n                            lang,\n                        }}\n                        title={title}\n                        titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n                        meta={[\n                            {\n                                name: `description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:title`,\n                                content: title,\n                            },\n                            {\n                                property: `og:description`,\n                                content: metaDescription,\n                            },\n                            {\n                                property: `og:type`,\n                                content: `website`,\n                            },\n                            {\n                                name: `twitter:card`,\n                                content: `summary`,\n                            },\n                            {\n                                name: `twitter:creator`,\n                                content: data.site.siteMetadata.author,\n                            },\n                            {\n                                name: `twitter:title`,\n                                content: title,\n                            },\n                            {\n                                name: `twitter:description`,\n                                content: metaDescription,\n                            },\n                        ]\n                            .concat(\n                                keywords.length > 0\n                                    ? {\n                                          name: `keywords`,\n                                          content: keywords.join(`, `),\n                                      }\n                                    : []\n                            )\n                            .concat(meta)}\n                    />\n                );\n            }}\n        />\n    );\n}\n\nSEO.defaultProps = {\n    lang: `en`,\n    meta: [],\n    keywords: [],\n};\n\nSEO.propTypes = {\n    description: PropTypes.string,\n    lang: PropTypes.string,\n    meta: PropTypes.array,\n    keywords: PropTypes.arrayOf(PropTypes.string),\n    title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n    query DefaultSEOQuery {\n        site {\n            siteMetadata {\n                title\n                description\n                author\n            }\n        }\n    }\n`;\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Header = ({ siteTitle }) => (\n    <header\n        style={{\n            background: `rebeccapurple`,\n            marginBottom: `1.45rem`,\n        }}\n    >\n        <div\n            style={{\n                margin: `0 auto`,\n                maxWidth: 960,\n                padding: `1.45rem 1.0875rem`,\n            }}\n        >\n            <h1 style={{ margin: 0 }}>\n                <Link\n                    to=\"/\"\n                    style={{\n                        color: `white`,\n                        textDecoration: `none`,\n                    }}\n                >\n                    {siteTitle}\n                </Link>\n            </h1>\n        </div>\n    </header>\n);\n\nHeader.propTypes = {\n    siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n    siteTitle: ``,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport './layout.css';\n\nconst Layout = ({ children }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteTitleQuery {\n                site {\n                    siteMetadata {\n                        title\n                    }\n                }\n            }\n        `}\n        render={data => (\n            <>\n                <Header siteTitle={data.site.siteMetadata.title} />\n                <div\n                    style={{\n                        margin: `0 auto`,\n                        maxWidth: 960,\n                        padding: `0px 1.0875rem 1.45rem`,\n                        paddingTop: 0,\n                    }}\n                >\n                    <main>{children}</main>\n                    <footer>\n                        © {new Date().getFullYear()}, Built with\n                        {` `}\n                        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n                    </footer>\n                </div>\n            </>\n        )}\n    />\n);\n\nLayout.propTypes = {\n    children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}